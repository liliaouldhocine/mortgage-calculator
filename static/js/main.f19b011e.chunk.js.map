{"version":3,"sources":["components/TextInput/index.js","components/SelectInput/index.js","containers/MorgageCalculator/index.js","reportWebVitals.js","index.js"],"names":["TextInput","label","name","placeholder","type","value","handleOnChange","htmlFor","onChange","e","target","min","max","SelectInput","options","map","option","AMORTIZATION","result","index","MorgageCalculator","useState","mortgageAmount","setMortgageAmount","interestRate","setInterestRate","prepaymentAmount","setPrepaymentAmount","amortizationPeriod","setAmortizationPeriod","monthlyPayment","setMonthlyPayment","className","onSubmit","percentageRate","Math","pow","toFixed","preventDefault","handleOnSubmit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f19b011e.chunk.js","sourcesContent":["export const TextInput = ({\n  label,\n  name,\n  placeholder,\n  type,\n  value,\n  handleOnChange,\n}) => {\n  const renderInput = () => {\n    if (type === 'cash') {\n      return (\n        <div>\n          <span>$</span>\n          <input placeholder={placeholder} value={value} onChange={(e) => handleOnChange(e.target.value)} name={name} type=\"number\" />\n        </div>\n      )\n    }\n    if (type === 'percentage') {\n      return (\n        <div>\n          <input placeholder={placeholder} value={value} onChange={(e) => handleOnChange(e.target.value)} name={name} type=\"number\" min=\"0\" max=\"100\" />\n          <span>%</span>\n        </div>\n      )\n    }\n\n    return(\n      <input placeholder={placeholder} value={value} onChange={(e) => handleOnChange(e.target.value)} name={name} type=\"number\" />\n    )\n  }\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      {renderInput()}\n    </div>\n  )\n}\n\nexport default TextInput;","export const SelectInput = ({\n  label,\n  name,\n  value,\n  handleOnChange,\n  options,\n}) => {\n  const renderOptions = () => {\n    return options.map(option => (\n      <option key={option.value} value={option.value} label={option.label} />\n    ));\n  }\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <select value={value} onChange={(e) => handleOnChange(e.target.value)} name={name}>\n        {renderOptions()}\n      </select>\n    </div>\n  )\n}\n\nexport default SelectInput;","import { useState } from 'react';\n\nimport './MorgageCalculator.css';\nimport { TextInput } from '../../components/TextInput';\nimport { SelectInput } from '../../components/SelectInput';\n\nconst AMORTIZATION = () => {\n  let result = [];\n  for (var index = 0; index < 30; index++) {\n    result = [...result, {label: index + 1, value: index + 1}];\n  }\n  return result;\n};\n\n// const PAYMENT = [\n//   { value:\"AccW\", label: \"ccelerated Weekly\" },\n//   { value:\"W\", label: \"Weekly\" },\n//   { value:\"AccBiW\", label: \"Accelerated Bi-weekly\" },\n//   { value:\"BiW\", label: \"Bi-Weekly (every 2 weeks)\" },\n//   { value:\"SemiM\", label: \"Semi-monthly (24x per year)\" },\n//   { value:\"M\", label: \"Monthly (12x per year)\" }\n// ];\n\n// const TERM = [\n//   { value:\"1\", label: '1 Year' },\n//   { value:\"2\", label: '2 Years' },\n//   { value:\"3\", label: '3 Years' },\n//   { value:\"4\", label: '4 Years' },\n//   { value:\"5\", label: '5 Years' },\n//   { value:\"6\", label: '6 Years' },\n//   { value:\"7\", label: '7 Years' },\n//   { value:\"8\", label: '8 Years' },\n//   { value:\"9\", label: '9 Years' },\n//   { value:\"10\", label: '10 Years' }\n// ];\n\nconst MorgageCalculator = () => {\n  const [mortgageAmount, setMortgageAmount] = useState(0);\n  const [interestRate, setInterestRate] = useState(0);\n  const [prepaymentAmount, setPrepaymentAmount] = useState(0);\n  const [amortizationPeriod, setAmortizationPeriod] = useState(0);\n  const [monthlyPayment, setMonthlyPayment] = useState(null);\n\n\n  const handleOnSubmit = (e) => {\n    const realMortgageAmount = mortgageAmount - prepaymentAmount\n\n    // calculations taken here https://stackoverflow.com/questions/36096825/javascript-mortgage-calculator\n    const percentageRate = interestRate / 1200;\n    const monthlyPayment = (realMortgageAmount * percentageRate) / (1 - (Math.pow((1 + percentageRate) , amortizationPeriod * -1)));\n    setMonthlyPayment((monthlyPayment / 12).toFixed(2));\n\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"mortgageCalculator\">\n      <h1>Mortgage Calculator</h1>\n      <div>\n        <form onSubmit={(e) => handleOnSubmit(e)}>\n          <div className=\"form\">\n            <div className=\"half\">\n              <h3>Payment Plan</h3>\n              <TextInput name=\"mortgageAmount\" label=\"Mortgage Amount:\" placeholder=\"100,000.00\" type=\"cash\" value={mortgageAmount} handleOnChange={setMortgageAmount} />\n              <TextInput name=\"interestRate\" label=\"Interest Rate:\" placeholder=\"5.00\" type=\"percentage\" value={interestRate} handleOnChange={setInterestRate} />\n              <SelectInput name=\"amortizationPeriod\" label=\"Amortization Period:\" options={ AMORTIZATION() } value={amortizationPeriod} handleOnChange={setAmortizationPeriod} />\n              {/* <SelectInput name=\"amortizationPeriod\" label=\"Amortization Period:\" value={ AMORTIZATION() } />\n              <SelectInput name=\"paymentFrequency\" label=\"Payment Frequency:\" value={ PAYMENT } />\n              <SelectInput name=\"term\" label=\"Term:\" selected=\"5\" value={ TERM } /> */}\n            </div>\n            <div className=\"half\">\n              <h3>Prepayment Plan</h3>\n                <TextInput name=\"prepaymentAmount\" label=\"Prepayment Amount:\" placeholder=\"0.00\" type=\"cash\" value={prepaymentAmount} handleOnChange={setPrepaymentAmount} />\n            </div>\n          </div>\n          <div className=\"submitButton\">\n            <button type=\"submit\">Calculate</button>\n          </div>\n        </form>\n      </div>\n      {monthlyPayment &&\n        <div>\n          <h2>Calculation Summary</h2>\n          <p><b>Monthly payment :</b>${monthlyPayment}</p>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default MorgageCalculator;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MorgageCalculatorContainer from './containers/MorgageCalculator/';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MorgageCalculatorContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}